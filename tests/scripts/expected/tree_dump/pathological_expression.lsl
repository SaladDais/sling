script [none] (cv=) (1,1)
  ast node list [none] (cv=) (1,1)
  ast node list [none] (cv=) (1,1)
    state [none] (cv=) (1,1)
      identifier "default" [none] (cv=) (1,1)
      ast node list [none] (cv=) (1,1)
        event handler [none] (cv=) (2,5)
          identifier "state_entry" [none] (cv=) (2,5)
          event decl [none] (cv=) (2,5)
          compound statement [none] (cv=) (2,19)
            declaration [none] (cv=) (3,9)
              identifier "i" [integer] (cv=) (3,17)
              constant expression [integer] (cv=integer constant: 10) (3,21)
                integer constant: 10 [integer] (cv=integer constant: 10) (3,21)
            expression statement [none] (cv=) (5,9)
              function call [none] (cv=) (5,9)
                identifier "llOwnerSay" [none] (cv=) (5,9)
                ast node list [none] (cv=) (5,9)
                  typecast expression [string] (cv=) (5,20)
                    binary expression: '-=' [integer] (cv=) (5,29)
                      lvalue expression {foldable} [integer] (cv=) (5,29)
                        identifier "i" [integer] (cv=) (5,29)
                        null
                      binary expression: '-' [integer] (cv=) (5,32)
                        unary expression: '-' [integer] (cv=) (5,32)
                          unary expression: '-- (post)' [integer] (cv=) (5,33)
                            lvalue expression {foldable} [integer] (cv=) (5,33)
                              identifier "i" [integer] (cv=) (5,33)
                              null
                        lvalue expression {foldable} [integer] (cv=) (5,37)
                          identifier "i" [integer] (cv=) (5,37)
                          null
            expression statement [none] (cv=) (8,9)
              function call [none] (cv=) (8,9)
                identifier "llOwnerSay" [none] (cv=) (8,9)
                ast node list [none] (cv=) (8,9)
                  typecast expression [string] (cv=) (8,20)
                    binary expression: '-=' [integer] (cv=) (8,29)
                      lvalue expression {foldable} [integer] (cv=) (8,29)
                        identifier "i" [integer] (cv=) (8,29)
                        null
                      binary expression: '-' [integer] (cv=) (8,32)
                        unary expression: '-' [integer] (cv=) (8,32)
                          unary expression: '-- (post)' [integer] (cv=) (8,33)
                            lvalue expression {foldable} [integer] (cv=) (8,33)
                              identifier "i" [integer] (cv=) (8,33)
                              null
                        unary expression: '-- (post)' [integer] (cv=) (8,37)
                          lvalue expression {foldable} [integer] (cv=) (8,37)
                            identifier "i" [integer] (cv=) (8,37)
                            null
            expression statement [none] (cv=) (11,9)
              function call [none] (cv=) (11,9)
                identifier "llOwnerSay" [none] (cv=) (11,9)
                ast node list [none] (cv=) (11,9)
                  typecast expression [string] (cv=) (11,20)
                    binary expression: '-=' [integer] (cv=) (11,29)
                      lvalue expression {foldable} [integer] (cv=) (11,29)
                        identifier "i" [integer] (cv=) (11,29)
                        null
                      binary expression: '-' [integer] (cv=) (11,32)
                        unary expression: '-' [integer] (cv=) (11,32)
                          unary expression: '-- (post)' [integer] (cv=) (11,33)
                            lvalue expression {foldable} [integer] (cv=) (11,33)
                              identifier "i" [integer] (cv=) (11,33)
                              null
                        unary expression: '-' [integer] (cv=) (11,38)
                          unary expression: '-- (post)' [integer] (cv=) (11,39)
                            lvalue expression {foldable} [integer] (cv=) (11,39)
                              identifier "i" [integer] (cv=) (11,39)
                              null
            nop statement [none] (cv=) (17,9)
