script [none] (cv=) (1,1)
  ast node list [none] (cv=) (1,1)
  ast node list [none] (cv=) (1,1)
    state [none] (cv=) (1,1)
      identifier "default" [none] (cv=) (1,1)
      ast node list [none] (cv=) (1,1)
        event handler [none] (cv=) (2,5)
          identifier "state_entry" [none] (cv=) (2,5)
          event decl [none] (cv=) (2,5)
          compound statement [none] (cv=) (2,19)
            while [none] (cv=) (4,9)
              constant expression [integer] (cv=integer constant: 1) (4,16)
                integer constant: 1 [integer] (cv=integer constant: 1) (4,16)
              compound statement [none] (cv=) (4,19)
                if [none] (cv=) (5,13)
                  function call [float] (cv=) (5,17)
                    identifier "llFrand" [float] (cv=) (5,17)
                    ast node list [none] (cv=) (5,17)
                      constant expression [integer] (cv=integer constant: 1) (5,25)
                        integer constant: 1 [integer] (cv=integer constant: 1) (5,25)
                  compound statement [none] (cv=) (5,29)
                    jump {continue-like} [none] (cv=) (6,17)
                      identifier "break_1" [none] (cv=) (6,22)
                    label [none] (cv=) (7,17)
                      identifier "break_1" [none] (cv=) (7,18)
                  null
            while [none] (cv=) (10,9)
              constant expression [integer] (cv=integer constant: 1) (10,16)
                integer constant: 1 [integer] (cv=integer constant: 1) (10,16)
              compound statement [none] (cv=) (10,19)
                if [none] (cv=) (11,13)
                  function call [float] (cv=) (11,17)
                    identifier "llFrand" [float] (cv=) (11,17)
                    ast node list [none] (cv=) (11,17)
                      constant expression [integer] (cv=integer constant: 1) (11,25)
                        integer constant: 1 [integer] (cv=integer constant: 1) (11,25)
                  compound statement [none] (cv=) (11,29)
                    expression statement [none] (cv=) (12,17)
                      constant expression [integer] (cv=integer constant: 1) (12,17)
                        integer constant: 1 [integer] (cv=integer constant: 1) (12,17)
                  compound statement [none] (cv=) (13,20)
                    jump {continue-like} [none] (cv=) (14,17)
                      identifier "break_2" [none] (cv=) (14,22)
                    label [none] (cv=) (15,17)
                      identifier "break_2" [none] (cv=) (15,18)
            while [none] (cv=) (18,9)
              constant expression [integer] (cv=integer constant: 1) (18,16)
                integer constant: 1 [integer] (cv=integer constant: 1) (18,16)
              compound statement [none] (cv=) (18,19)
                if [none] (cv=) (19,13)
                  function call [float] (cv=) (19,17)
                    identifier "llFrand" [float] (cv=) (19,17)
                    ast node list [none] (cv=) (19,17)
                      constant expression [integer] (cv=integer constant: 1) (19,25)
                        integer constant: 1 [integer] (cv=integer constant: 1) (19,25)
                  compound statement [none] (cv=) (19,29)
                    jump {continue-like} [none] (cv=) (20,17)
                      identifier "break_3" [none] (cv=) (20,22)
                  compound statement [none] (cv=) (21,20)
                label [none] (cv=) (22,13)
                  identifier "break_3" [none] (cv=) (22,14)
            while [none] (cv=) (26,9)
              constant expression [integer] (cv=integer constant: 1) (26,16)
                integer constant: 1 [integer] (cv=integer constant: 1) (26,16)
              compound statement [none] (cv=) (26,19)
                if [none] (cv=) (27,13)
                  function call [float] (cv=) (27,17)
                    identifier "llFrand" [float] (cv=) (27,17)
                    ast node list [none] (cv=) (27,17)
                      constant expression [integer] (cv=integer constant: 1) (27,25)
                        integer constant: 1 [integer] (cv=integer constant: 1) (27,25)
                  compound statement [none] (cv=) (27,29)
                    jump [none] (cv=) (28,17)
                      identifier "break_4" [none] (cv=) (28,22)
                    label [none] (cv=) (29,17)
                      identifier "break_4" [none] (cv=) (29,18)
                  compound statement [none] (cv=) (30,20)
            while [none] (cv=) (34,9)
              constant expression [integer] (cv=integer constant: 1) (34,16)
                integer constant: 1 [integer] (cv=integer constant: 1) (34,16)
              compound statement [none] (cv=) (34,19)
                if [none] (cv=) (35,13)
                  function call [float] (cv=) (35,17)
                    identifier "llFrand" [float] (cv=) (35,17)
                    ast node list [none] (cv=) (35,17)
                      constant expression [integer] (cv=integer constant: 1) (35,25)
                        integer constant: 1 [integer] (cv=integer constant: 1) (35,25)
                  compound statement [none] (cv=) (35,29)
                    jump {break-like} [none] (cv=) (36,17)
                      identifier "break_5" [none] (cv=) (36,22)
                  null
            label [none] (cv=) (39,9)
              identifier "break_5" [none] (cv=) (39,10)
            while [none] (cv=) (43,9)
              constant expression [integer] (cv=integer constant: 1) (43,16)
                integer constant: 1 [integer] (cv=integer constant: 1) (43,16)
              compound statement [none] (cv=) (43,19)
                if [none] (cv=) (44,13)
                  function call [float] (cv=) (44,17)
                    identifier "llFrand" [float] (cv=) (44,17)
                    ast node list [none] (cv=) (44,17)
                      constant expression [integer] (cv=integer constant: 1) (44,25)
                        integer constant: 1 [integer] (cv=integer constant: 1) (44,25)
                  compound statement [none] (cv=) (44,29)
                    jump [none] (cv=) (45,17)
                      identifier "break_6" [none] (cv=) (45,22)
                  null
            expression statement [none] (cv=) (48,9)
              constant expression [integer] (cv=integer constant: 1) (48,9)
                integer constant: 1 [integer] (cv=integer constant: 1) (48,9)
            label [none] (cv=) (49,9)
              identifier "break_6" [none] (cv=) (49,10)
            while [none] (cv=) (51,9)
              constant expression [integer] (cv=integer constant: 1) (51,16)
                integer constant: 1 [integer] (cv=integer constant: 1) (51,16)
              compound statement [none] (cv=) (51,19)
                while [none] (cv=) (52,13)
                  constant expression [integer] (cv=integer constant: 1) (52,20)
                    integer constant: 1 [integer] (cv=integer constant: 1) (52,20)
                  compound statement [none] (cv=) (52,23)
                    jump [none] (cv=) (54,17)
                      identifier "break_7" [none] (cv=) (54,22)
            label [none] (cv=) (57,9)
              identifier "break_7" [none] (cv=) (57,10)
